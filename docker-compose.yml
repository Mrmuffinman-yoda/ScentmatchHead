x-nextjs-service: &nextjs-service
  build:
    context: ./ui
    target: prod
  image: scentmatch-nextjs:latest
  env_file:
    - ./config/env/.env.prod
  networks:
    - scentmatch-network
  restart: unless-stopped

services:
  nginx:
    image: nginx:latest
    container_name: nginx-load-balancer
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8000:80"
    depends_on:
      - nextjs_1
      - nextjs_2
      - nextjs_3
    networks:
      - scentmatch-network
    restart: unless-stopped

  nextjs_1:
    <<: *nextjs-service
    container_name: nextjs-server-1
    restart: unless-stopped

  nextjs_2:
    image: scentmatch-nextjs:latest
    container_name: nextjs-server-2
    env_file:
      - ./config/env/.env.prod
    networks:
      - scentmatch-network
    restart: unless-stopped

  nextjs_3:
    image: scentmatch-nextjs:latest
    container_name: nextjs-server-3
    env_file:
      - ./config/env/.env.prod
    networks:
      - scentmatch-network
    depends_on:
      - fastapi
    restart: unless-stopped

  fastapi:
    build: ./server
    container_name: fastapi-server
    env_file:
      - ./config/env/.env.prod
    depends_on:
      - postgres-db-PRD
    networks:
      - scentmatch-network
    ports:
      - "8001:8001"
    volumes:
      - ./server:/app
    command: gunicorn -w 4 -k uvicorn.workers.UvicornWorker app.main:app --bind 0.0.0.0:8001
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/docs"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres-db-PRD:
    image: postgres:latest
    container_name: postgres-db-PRD
    env_file:
      - ./config/env/.env.prod
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./config/db_init:/docker-entrypoint-initdb.d/
    networks:
      - scentmatch-network
    ports:
      - "5432:5432"
    mem_limit: 300m
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scentmatch_user"]
      interval: 30s
      timeout: 10s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: minio
    env_file:
      - ./config/env/.env.prod
    entrypoint: /docker-entrypoint-init.d/init.sh
    command: server /data --console-address ":9090"
    ports:
      - "9000:9000"
      - "9090:9090"
    networks:
      - scentmatch-network
    volumes:
      - minio-data:/data
      - ./config/scripts:/docker-entrypoint-init.d/
      - ./storage/blob_storage:/blob_storage
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis-cache
    ports:
      - "6379:6379"
    networks:
      - scentmatch-network
    volumes:
      - redis-data:/data
    mem_limit: 300m
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  scentmatch-network:
    driver: bridge

volumes:
  postgres-data:
  minio-data:
  redis-data:
