version: "3"

services:
  # NGINX Load Balancer
  nginx:
    image: nginx:latest
    container_name: nginx-load-balancer
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8000:80" # External port to access your app via HTTP
    depends_on:
      - nextjs_1
      - nextjs_2
      - nextjs_3
    networks:
      - scentmatch-network

  # 3 Next.js Servers (can be replicated)
  nextjs_1:
    build: ./ui # Assuming you have a Next.js app folder with Dockerfile
    container_name: nextjs-server-1
    environment:
      - NODE_ENV=production
    networks:
      - scentmatch-network
    expose:
      - "3000"

  nextjs_2:
    build: ./ui # Same as nextjs_1, pointing to Next.js app
    container_name: nextjs-server-2
    environment:
      - NODE_ENV=production
    networks:
      - scentmatch-network
    expose:
      - "3000"

  nextjs_3:
    build: ./ui # Same as nextjs_1, pointing to Next.js app
    container_name: nextjs-server-3
    environment:
      - NODE_ENV=production
    networks:
      - scentmatch-network
    expose:
      - "3000"

  # FastAPI Server
  fastapi:
    build: ./server # Path to your FastAPI app
    container_name: fastapi-server
    environment:
      - DATABASE_URL=postgres://user:password@postgres-db/scentmatch
    depends_on:
      - postgres-db
    networks:
      - scentmatch-network
    expose:
      - "8001" # Port FastAPI will run on (internal)
    ports:
      - "8001:8001" # External port to access your app via HTTP
    volumes:
      - ./server:/app # Mount local code for live reloading
      - /app/venv # Prevents overwriting venv in container
      # TODO - remove live volume in production

  # PostgreSQL Database
  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: scentmatch_user
      POSTGRES_PASSWORD: scentmatch_password
      POSTGRES_DB: scentmatch_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql # Optional init script
    networks:
      - scentmatch-network
    ports:
      - "5432:5432" # PostgreSQL port

  # MinIO Blob Storage
  minio-blob:
    image: minio/minio:latest
    container_name: minio-blob
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9090"
    ports:
      - "9000:9000" # MinIO Web UI
      - "9090:9090" # MinIO Console
    networks:
      - scentmatch-network
    volumes:
      - minio-data:/data # Persistent storage for MinIO
      - ./init.sh:/docker-entrypoint-init.d/init.sh # Mount the init script
      - ./blob_storage:/blob_storage # Mount the local blob_storage folder

  # Redis Cache
  redis:
    image: redis:latest
    container_name: redis-cache
    networks:
      - scentmatch-network
    ports:
      - "6379:6379" # Redis default port

networks:
  scentmatch-network:
    driver: bridge

volumes:
  postgres-data:
  minio-data:
