services:
  nextjs:
    build:
      context: ./ui
      target: dev
    container_name: nextjs-server
    env_file:
      - ./config/env/.env.dev
    volumes:
      - ./ui:/app
    ports:
      - "3000:3000"
    networks:
      - scentmatch-network
    depends_on:
      - fastapi

  fastapi:
    build: ./server
    container_name: fastapi-server
    env_file:
      - ./config/env/.env.dev
    depends_on:
      - postgres-db-DEV
      - minio
      - redis
    networks:
      - scentmatch-network
    expose:
      - "8001"
    ports:
      - "8001:8001"
    volumes:
      - ./server:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload --log-level debug

  postgres-db-DEV:
    image: postgres:latest
    container_name: postgres-db-DEV
    env_file:
      - ./config/env/.env.dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./config/db_init:/docker-entrypoint-initdb.d/
    networks:
      - scentmatch-network
    ports:
      - "5432:5432"

  minio:
    image: minio/minio:latest
    container_name: minio
    env_file:
      - ./config/env/.env.dev
    entrypoint: /docker-entrypoint-init.d/init.sh
    command: server /data --console-address ":9090"
    ports:
      - "9000:9000"
      - "9090:9090"
    networks:
      - scentmatch-network
    volumes:
      - minio-data:/data
      - ./config/scripts:/docker-entrypoint-init.d/
      - ./storage/blob_storage:/blob_storage
  redis:
    image: redis:latest
    container_name: redis-DEV
    networks:
      - scentmatch-network
    ports:
      - "6379:6379"
networks:
  scentmatch-network:
    driver: bridge

volumes:
  postgres-data:
  minio-data:
